<?php

namespace App\Http\Controllers;

use App\Models\news;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class API_newsController extends Controller
{
    public function index(Request $request)
    {
        $token = $request->input('api_token');
        $user = DB::table('users')->select('id')->where('api_token', '=', hash('sha256', $token))->get();
        $user_id = get_object_vars($user[0])['id'];

        $news = DB::table('news')->where('user_id', '=', $user_id)->get();

        return $news;
    }

    public function show(Request $request, $id)
    {
        $token = $request->input('api_token');
        $user = DB::table('users')->select('id')->where('api_token', '=', hash('sha256', $token))->get();
        $user_id = get_object_vars($user[0])['id'];

        $news = DB::table('news')->where('user_id', '=', $user_id)->where('id', '=', $id)->get();

        return $news;
    }

    public function store(Request $request)
    {
        $token = $request->input('api_token');
        $user = DB::table('users')->select('id')->where('api_token', '=', hash('sha256', $token))->get();
        $user_id = get_object_vars($user[0])['id'];

        $data = new news();
        $data['user_id'] = $user_id;
        $data['title'] = $request->input('title');
        $data['date'] = $request->input('date');
        $data['description'] = $request->input('description');
        $data->save();

        return  response()->json($data, 201);
    }

    public function update(Request $request, $id)
    {
        $token = $request->input('api_token');
        $user = DB::table('users')->select('id')->where('api_token', '=', hash('sha256', $token))->get();
        $user_id = get_object_vars($user[0])['id'];

        $data = news::findOrFail($id);

        if ($data['user_id'] != $user_id) {
            return response()->json(null, 404);
        }

        $data['title'] = $request->input('title');
        $data['date'] = $request->input('date');
        $data['description'] = $request->input('description');
        $data->save();
        return response()->json($data, 200);
    }

    public function destroy(Request $request, $id)
    {
        $token = $request->input('api_token');
        $user = DB::table('users')->select('id')->where('api_token', '=', hash('sha256', $token))->get();
        $user_id = get_object_vars($user[0])['id'];

        $data = news::findOrFail($id);

        if ($data['user_id'] != $user_id) {
            return response()->json(null, 404);
        }

        $data->delete();

        return response()->json(null, 204);
    }
}
